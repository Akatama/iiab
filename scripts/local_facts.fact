#!/bin/bash

# 2020-10-19: Displays all errors on purpose, and uses '|| true' to continue.

# STAGE is for ./iiab-install which runs Ansible with iiab-stages.yml
# - fresh installs start at STAGE 0
# - interrupted installs record the last completed STAGE (1-9)
#
# We initialize to '0' (zero) to cover both situations: (1) where iiab.env does
# not exist and (2) where iiab.env exists but fails to set STAGE=<something>
# (source command below tries to use this file, to the STAGE variable)
STAGE=0
source /etc/iiab/iiab.env || true

OS="none"
OS=$(grep ^ID= /etc/*elease | cut -d= -f2) || true
OS=${OS//\"/}    # Remove all '"'
if [ -f /etc/rpi-issue ]; then
    OS="raspbian"
fi
VERSION_ID="none"
VERSION_ID=$(grep ^VERSION_ID= /etc/*elease | cut -d= -f2) || true
VERSION_ID=${VERSION_ID//\"/}    # Remove all '"'
VERSION_ID=${VERSION_ID%%.*}     # Remove all '.' and stuff to the right of 'em
OS_VER=$OS-$VERSION_ID

# Previously supported Linux distributions / versions:
    #"fedora-18"    | \
    #"fedora-22"    | \
    #"debian-8"     | \
    #"debian-9"     | \
    #"ubuntu-16"    | \
    #"ubuntu-17"    | \
    #"ubuntu-18"    | \
    #"ubuntu-19"    | \
    #"centos-7"     | \
    #"raspbian-8"   | \
    #"raspbian-9"   | \

case $OS_VER in
    "debian-10"    | \
    "ubuntu-20"    | \
    "linuxmint-20" | \
    "raspbian-10")
       ;;
    *) OS_VER="OS_not_supported"
       ;;
esac

# Get git branch and commit, indicating IIAB version
BRANCH="none"
BRANCH=$(git rev-parse --abbrev-ref HEAD) || true

COMMIT="none"
COMMIT=$(git rev-parse --verify HEAD) || true

PHPLIB_DIR="none"
if [ -d /usr/lib64/php ]; then
    PHPLIB_DIR=/usr/lib64/php
elif [ -d /usr/lib/php5 ]; then
    PHPLIB_DIR=/usr/lib/php5
elif [ -d /usr/lib/php ]; then
    PHPLIB_DIR=/usr/lib/php
fi

XO_VERSION="none"
XO_VERSION=$(cat /proc/device-tree/mfg-data/MN) || true

RPI_VERSION="none"
RPI_VERSION=$(cat /proc/device-tree/model) || true

ANSIBLE_VERSION="none"
ANSIBLE_VERSION=$(ansible --version | head -n 1 | cut -f 2 -d " ") || true

DHCPCD="none"
DHCPCD=$(systemctl is-enabled dhcpcd) || true

# This check is Debian family only.
# is_redhat would use NetworkManager as the service name.
NM="none"
NM=$(systemctl is-enabled network-manager) || true

SYSD_NETD="none"
SYSD_NETD=$(systemctl is-enabled systemd-networkd) || true

cat <<EOF
{"phplib_dir"             : "$PHPLIB_DIR",
"stage"                   : "$STAGE",
"dhcpcd"                  : "$DHCPCD",
"network_manager"         : "$NM",
"systemd_networkd"        : "$SYSD_NETD",
"iiab_branch"             : "$BRANCH",
"iiab_commit"             : "$COMMIT",
"xo_model"                : "$XO_VERSION",
"rpi_model"               : "$RPI_VERSION",
"ansible_version"         : "$ANSIBLE_VERSION",
"os"                      : "$OS",
"os_ver"                  : "$OS_VER"}
EOF
