#!/bin/bash -e

echo -e '\n\nSTRONGLY RECOMMENDED PREREQUISITE: (1) remove all prior versions of Ansible using "apt purge ansible" and/or "pip uninstall ansible" and (2) clear out all lines containing ansible from /etc/apt/sources.list and /etc/apt/sources.list.d/*\n'

echo -e 'IF YOU FACE ERROR "signatures couldn'"'"'t be verified because the public key is not available" THEN REPEATEDLY RE-RUN "apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367"\n'

echo -e 'COMPLETE INSTALL INSTRUCTIONS:\nhttps://github.com/iiab/iiab/wiki/IIAB-Installation#do-everything-from-scratch\n'

echo -e 'NOW ATTEMPTING TO INSTALL THE LATEST ANSIBLE:'
echo -e 'Ensure you'"'"'re online before running this (/opt/iiab/iiab/scripts/ansible)\n'

echo -e 'ALTERNATIVES: Run scripts/ansible-2.6.x or scripts/ansible-2.5.x-deprecated\n\n'


GOOD_VER="2.6.4"    # Ansible version for OLPC XO laptops (pip install).
                    # On other OS's we attempt to install/upgrade THE latest from PPA, which might provide an even more recent version of Ansible.
CURR_VER="undefined"

export DEBIAN_FRONTEND=noninteractive

if [ ! `command -v ansible-playbook` ]; then   # "command -v" is POSIX compliant; also catches built-in commands like "cd"
    echo "scripts/ansible will now try to install Ansible --- Please Wait"
    if [ -f /etc/centos-release ]; then
        yum -y install ca-certificates nss epel-release
        yum -y install git bzip2 file findutils gzip hg svn sudo tar which unzip xz zip libselinux-python
        yum -y install python-pip python-setuptools python-wheel patch
        yum -y install https://releases.ansible.com/ansible/rpm/release/epel-7-x86_64/ansible-2.6.4-1.el7.ans.noarch.rpm
#    elif [ -f /etc/fedora-release ]; then
#        CURR_VER=`grep VERSION_ID /etc/*elease | cut -d= -f2`
#        URL=https://github.com/jvonau/iiab/blob/ansible/vars/fedora-$CURR_VER.yml
#        dnf -y install ansible git bzip2 file findutils gzip hg svn sudo tar which unzip xz zip libselinux-python
#        dnf -y install python-pip python-setuptools python-wheel patch
    elif [ -f /etc/olpc-release ]; then
        yum -y install ca-certificates nss
        yum -y install git bzip2 file findutils gzip hg svn sudo tar which unzip xz zip libselinux-python
        yum -y install python-pip python-setuptools python-wheel patch
        pip install --upgrade pip setuptools wheel #EOL just do it
        pip install ansible==$GOOD_VER --disable-pip-version-check
    # Parens are optional, but greatly clarify :)
    elif (grep -qi ubuntu /etc/lsb-release 2> /dev/null) || (grep -qi ubuntu /etc/os-release); then
        #apt -y install python-pip python-setuptools python-wheel patch    # 2018-09-05: fails on @kananigit's Ubuntu 18.04/Server.  Fix @ https://github.com/iiab/iiab/pull/1091
        apt update
        apt -y install software-properties-common    # adds command "apt-add-repository"
        apt-add-repository -y ppa:ansible/ansible    # adds correct line to correct file e.g. adds line "deb http://ppa.launchpad.net/ansible/ansible/ubuntu bionic main" to /etc/apt/sources.list.d/ansible-ubuntu-ansible-bionic.list
    # elif UBUNTU MUST REMAIN ABOVE (as Ubuntu ALSO contains /etc/debian_version, which would trigger the line just below)
    elif [ -f /etc/debian_version ] || (grep -qi raspbian /etc/*elease) ; then
        if ( ! grep -qi ansible /etc/apt/sources.list) && [ ! -f /etc/apt/sources.list.d/ansible ]; then
            apt update
            #apt -y install dirmngr python-pip python-setuptools python-wheel patch
            apt -y install dirmngr
            if ! grep -qx "deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main" /etc/apt/sources.list /etc/apt/sources.list.d/*.list; then
                echo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu xenial main" \
                     > /etc/apt/sources.list.d/iiab-ansible.list
            fi
            apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 93C4A3FD7BB9C367
        fi
    else
        echo "WARN: Could not detect distro or distro unsupported"
        exit 1
    fi
else
    #CURR_VER=`ansible --version | head -n 1 | cut -f 2 -d " "`
    CURR_VER=`ansible --version | head -1 | awk '{print $2}'`  # to match iiab-install
    echo "Currently installed Ansible version is: $CURR_VER"
    echo -e "INTERNET-IN-A-BOX GENERALLY REQUIRES ANSIBLE VERSION: $GOOD_VER or higher\n"
    if [ -f /etc/centos-release ] || [ -f /etc/fedora-release ]; then
        echo "Please use your system's package manager (or pip if nec) to update Ansible."
        exit 0
    elif [ -f /etc/olpc-release ]; then
        echo "Please use pip package manager to update Ansible."
        exit 0
    #elif [[ `grep -qi ansible /etc/apt/sources.list` ]] || [ -f /etc/apt/sources.list.d/ansible*.list ]; then
    #elif (grep -qi ansible /etc/apt/sources.list) || (ls /etc/apt/sources.list.d/*ansible*.list >/dev/null 2>&1) ; then
    #elif grep -r ansible /etc/apt; then
    # "grep -x" matches whole lines (confirms it's not commented out)
    elif grep -qx "deb http://ppa.launchpad.net/ansible/ansible/ubuntu .* main" /etc/apt/sources.list /etc/apt/sources.list.d/*.list; then
        echo -e '\nThe latest Ansible will be installed using line "deb http://ppa.launchpad.net/ansible/ansible/ubuntu ... main" correctly found in /etc/apt/sources.list and/or /etc/apt/sources.list.d/*.list'
        echo -e '\nIF *OTHER* ANSIBLE REPOS ARE ALSO FOUND BELOW, PLEASE MANUALLY REMOVE THEM TO ENSURE ANSIBLE UPDATES CLEANLY: (then re-run this script to be sure!)\n'
        grep ansible /etc/apt/sources.list /etc/apt/sources.list.d/*.list
        echo
    else
        echo -e '\nEXITING: Ansible repo "deb http://ppa.launchpad.net/ansible/ansible/ubuntu ... main" not found in /etc/apt/sources.list or /etc/apt/sources.list.d/*.list'
        echo -e '\nPLEASE UNINSTALL ANSIBLE (run "apt purge ansible" or "pip uninstall ansible", depending how Ansible was originally installed) THEN RE-RUN THIS SCRIPT.'
        exit 1
    fi
fi

if [ ! -f /etc/centos-release ] && [ ! -f /etc/fedora-release ] && [ ! -f /etc/olpc-release ]; then
    # Align IIAB with Ansible community's latest official release
    echo -e "\nUsing apt to check for updates, then install/upgrade ansible:\n"
    apt update
    apt -y --allow-downgrades install ansible

    # TEMPORARILY USE ANSIBLE 2.4.4 (REMOVE IT WITH "pip uninstall ansible")
    #pip install ansible==2.4.4

    # TEMPORARILY USE ANSIBLE 2.4.2 DUE TO 2.4.3 MEMORY BUG. DETAILS @ https://github.com/iiab/iiab/issues/669
    #echo "Install http://download.iiab.io/packages/ansible_2.4.2.0-1ppa~xenial_all.deb"
    #cd /tmp
    #wget http://download.iiab.io/packages/ansible_2.4.2.0-1ppa~xenial_all.deb
    #apt -y --allow-downgrades install ./ansible_2.4.2.0-1ppa~xenial_all.deb
fi

# needed?
mkdir -p /etc/ansible/
echo -e '[local]\nlocalhost\n' > /etc/ansible/hosts
