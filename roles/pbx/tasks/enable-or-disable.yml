- name: Enable & (Re)start 'freepbx' systemd service, if pbx_enabled
  systemd:
    daemon_reload: yes
    name: freepbx
    enabled: yes
    state: restarted
  when: pbx_enabled

- name: Disable & Stop 'freepbx' systemd service, if not pbx_enabled
  systemd:
    daemon_reload: yes
    name: freepbx
    enabled: no
    state: stopped
  when: not pbx_enabled


- block:

  - name: Enable http://box:{{ pbx_http_port }}/freepbx via Apache, if pbx_enabled    # http://box:83/freepbx
    command: a2ensite freepbx.conf
    when: pbx_enabled

  - name: Disable http://box:{{ pbx_http_port }}/freepbx via Apache, if not pbx_enabled
    command: a2dissite freepbx.conf
    when: not pbx_enabled

  - name: Restart Apache service ({{ apache_service }})
    systemd:
      name: "{{ apache_service }}"    # apache2
      state: restarted

  when: not pbx_try_nginx


- block:

  - name: Supply asterisk.conf to /etc/php/{{ php_version }}/fpm/pool.d/ with asterisk as the user
    copy:
      src: roles/pbx/templates/asterisk.conf
      dest: /etc/php/{{ php_version }}/fpm/pool.d/asterisk.conf
    when: pbx_enabled

  - name: Remove /etc/php/{{ php_version }}/fpm/pool.d/asterisk.conf when disabled
    file:
      path: /etc/php/{{ php_version }}/fpm/pool.d/asterisk.conf
      state: absent
    when: not pbx_enabled

  - name: Restart 'php7.4-fpm' systemd service
    systemd:
      name: php7.4-fpm
      state: restarted

  - name: Enable http://box/freepbx via NGINX, by installing {{ nginx_conf_dir }}/freepbx-nginx.conf from template
    template:
      src: freepbx-nginx.conf.j2
      dest: "{{ nginx_conf_dir }}/freepbx-nginx.conf"    # /etc/nginx/conf.d
    when: pbx_enabled

  - name: Disable http://box/freepbx via NGINX, by removing {{ nginx_conf_dir }}/freepbx-nginx.conf
    file:
      path: "{{ nginx_conf_dir }}/freepbx-nginx.conf"
      state: absent
    when: not pbx_enabled

  - name: Restart 'nginx' systemd service
    systemd:
      name: nginx
      state: restarted

  when: pbx_try_nginx
